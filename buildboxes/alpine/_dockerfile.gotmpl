# syntax=docker/dockerfile:1
FROM --platform=$TARGETPLATFORM golang:alpine{{ .AlpineVersion }}
SHELL ["/bin/ash", "-euxo", "pipefail", "-c"]

{{ .DoNotEdit }}

# Informational
ARG TARGETPLATFORM
ARG BUILDPLATFORM
RUN echo "I am running on $BUILDPLATFORM, building for $TARGETPLATFORM."

# Identify ourselves
ENV OS_DIST alpine
ENV OS_DIST_VER {{ .AlpineVersion }}
ENV OS_DIST_PKG apk

# Environment variables
ENV CGO_ENABLED 0
ENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV PIP_ROOT_USER_ACTION ignore

# Temporary. Remove as soon as we can.
RUN echo "busybox==1.36.1-r2" >>/etc/apk/world
RUN echo "busybox-binsh==1.36.1-r2" >>/etc/apk/world

# Install Packages
RUN apk upgrade --update --no-cache
RUN apk add --no-cache \
    alpine-conf \
    alpine-sdk \
    bash \
    ca-certificates \
    coreutils \
    curl \
    docker \
    git \
    gnupg \
    gpg \
    gzip \
    jq \
    libc6-compat \
    libffi-dev \
    make \
    openssh-client \
    poetry \
    py3-pip \
    py3-virtualenv \
    python3 \
    python3-dev \
    util-linux \
    wget \
    xz \
    ;

COPY download-asset.toml /etc/download-asset/download-asset.toml
RUN go install github.com/northwood-labs/download-asset@latest

RUN --mount=type=secret,id=GITHUB_TOKEN GITHUB_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" \
    download-asset get --owner-repo goreleaser/goreleaser-pro
