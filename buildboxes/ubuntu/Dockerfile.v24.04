# syntax=docker/dockerfile:1
FROM --platform=$TARGETPLATFORM ubuntu:24.04
SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]

################################################################################
# DO NOT EDIT THIS FILE!
# 
# 1. Edit the *.gotmpl files instead.
# 2. Run 'go run generate-from-templates.go'.
################################################################################

# Informational
ARG TARGETPLATFORM
ARG BUILDPLATFORM
RUN echo "I am running on $BUILDPLATFORM, building for $TARGETPLATFORM."

# Identify ourselves
ENV OS_DIST ubuntu
ENV OS_DIST_VER 24.04
ENV OS_DIST_NAME noble
ENV OS_DIST_PKG deb

# Environment variables
ENV CGO_ENABLED 0
ENV DEBIAN_FRONTEND noninteractive
ENV PIP_ROOT_USER_ACTION ignore
ENV PATH "/root/go/bin:$PATH"

RUN apt-get -y update && \
    apt-get -y upgrade && \
    apt-get -y install --no-install-recommends \
        build-essential \
        dialog \
        git \
        gpg \
        gpg-agent \
        nano \
        openssh-client \
        software-properties-common \
        wget \
    && \
    rm -rf /var/lib/apt/lists/* \
    ;

# Ubuntu Noble already has Go 1.22.
RUN apt-get -y update && \
    apt-get -y install --no-install-recommends \
        golang \
    ;

RUN apt-get -y update && \
    apt-get -y install --no-install-recommends \
        autoconf \
        autotools-dev \
        bash \
        curl \
        debhelper \
        docker \
        dpkg-dev \
        file \
        gettext \
        glibc-source \
        golang-go \
        gzip \
        jq \
        libncurses5-dev \
        libreadline-dev \
        locales \
        lsb-release \
        pkg-config \
        python3 \
        python3-dev \
        python3-pip \
        python3-virtualenv \
        python3-venv \
        s3fs \
        unzip \
        util-linux \
    && \
    rm -rf /var/lib/apt/lists/* \
    ;

RUN $(which python3) -m pip install --upgrade pip && \
    $(which python3) -m pip install --upgrade \
        awscli \
        certifi \
        ;

COPY download-asset.toml /etc/download-asset/download-asset.toml
RUN go install github.com/northwood-labs/download-asset@latest

RUN --mount=type=secret,id=GITHUB_TOKEN GITHUB_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" \
    download-asset get --owner-repo goreleaser/goreleaser-pro
RUN --mount=type=secret,id=GITHUB_TOKEN GITHUB_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" \
    download-asset get --owner-repo goreleaser/nfpm

# Labels
ARG BUILD_DATE
ARG VCS_REF

# https://github.com/opencontainers/image-spec/blob/master/annotations.md
LABEL org.opencontainers.image.title="Package Builder: Ubuntu 24.04"
LABEL org.opencontainers.image.description="Container image to help facilitate building packages for Ubuntu."
LABEL org.opencontainers.image.url="https://github.com/northwood-labs/package-building"
LABEL org.opencontainers.image.documentation="https://github.com/northwood-labs/package-building/wiki"
LABEL org.opencontainers.image.vendor="Northwood Labs"
LABEL org.opencontainers.image.authors="Ryan Parman <rparman@northwood-labs.com>"
LABEL org.opencontainers.image.created="$BUILD_DATE"
LABEL org.opencontainers.image.source="git@github.com:northwood-labs/package-building.git"
LABEL org.opencontainers.image.revision="$VCS_REF"
LABEL org.opencontainers.image.licenses="Apache-2.0"
