---
# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.

name: "ðŸ“¦ Build lychee"

"on":
  workflow_dispatch: null
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-lychee.yml
      - packages/lychee/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/build-lychee.yml
      - packages/lychee/**
  schedule:
    - cron: 10 11 * * *

defaults:
  run:
    shell: bash

env:
  DOCKER_BUILDKIT: 1
  REGISTRY: "${{ vars.REGISTRY }}"

permissions: read-all

jobs:
  lookup:
    runs-on: ubuntu-latest
    name: Lookup current version
    permissions:
      packages: write
      contents: read
    strategy:
      fail-fast: false

    container:
      image: "ghcr.io/northwood-labs/package-builder/ubuntu-v22.04:latest"
      credentials:
        username: "${{ github.actor }}"
        password: "${{ secrets.GITHUB_TOKEN }}"

    outputs:
      cache_hit: "${{ steps.check.outputs.cache-hit }}"
      package_version: "${{ steps.lookup_version.outputs.package_version }}"

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f
        with:
          egress-policy: audit

      - name: Lookup latest version of package
        id: lookup_version
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          echo "package_version=$(download-asset latest-tag -r 'lycheeverse/lychee' -s)" >> $GITHUB_OUTPUT

      - name: Check to see if we've already built this version
        uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57
        id: check
        with:
          key: "lychee-${{ steps.lookup_version.outputs.package_version }}"
          path: packages/lychee/dist
          lookup-only: true

  # compile:
  #   if: needs.lookup.outputs.cache_hit != 'true'
  #   needs: lookup
  #   name: Compile for musl
  #   uses: northwood-labs/package-building/.github/workflows/_build-musl.yml@main
  #   secrets: inherit
  #   with:
  #     package-name: lychee
  #     package-version: "${{ needs.lookup.outputs.package_version }}"

  build:
    if: needs.lookup.outputs.cache_hit != 'true'
    # needs: compile
    needs: lookup
    name: "ðŸ“¦ Build and cache"
    uses: northwood-labs/package-building/.github/workflows/_build-and-cache.yml@main
    secrets: inherit
    with:
      package-name: lychee
      package-version: "${{ needs.lookup.outputs.package_version }}"

  upload:
    if: needs.lookup.outputs.cache_hit != 'true'
    needs: build
    name: Upload to S3
    uses: northwood-labs/package-building/.github/workflows/upload-to-s3.yml@main
    secrets: inherit
    with:
      package-name: lychee
      package-version: "${{ needs.lookup.outputs.package_version }}"

  metadata_rpm:
    if: needs.lookup.outputs.cache_hit != 'true'
    needs: upload
    name: RPM metadata
    uses: northwood-labs/package-building/.github/workflows/generate-rpm-meta.yml@main
    secrets: inherit

  metadata_deb:
    if: needs.lookup.outputs.cache_hit != 'true'
    needs: upload
    name: DEB metadata
    uses: northwood-labs/package-building/.github/workflows/generate-deb-meta.yml@main
    secrets: inherit

  metadata_apk:
    if: needs.lookup.outputs.cache_hit != 'true'
    needs: upload
    name: APK metadata
    uses: northwood-labs/package-building/.github/workflows/generate-apk-meta.yml@main
    secrets: inherit
