---
# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.

name: "ðŸŽ¯ Step: Generate APK metadata"
on:
  workflow_dispatch:
  workflow_call:
    # We will pass secrets to the reusable workflow.

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-apk
  cancel-in-progress: true

# Variables available to all jobs defined in this file
env:
  DOCKER_BUILDKIT: 1
  REGISTRY: ${{ vars.REGISTRY }}

# Declare default permissions as read only.
permissions: read-all

jobs:
  generate:
    runs-on: ubuntu-latest
    name: s3fs
    strategy:
      fail-fast: false

    container:
      image: ghcr.io/northwood-labs/package-builder/alpine-v3.19:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: --privileged

    steps:
      - name: "Checkout code"
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4.1.3
        with:
          persist-credentials: false

      - name: Mount s3fs and generate metadata
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PACKAGE_BUCKET: ${{ vars.PACKAGE_BUCKET }}
          RSA_KEY_B64: ${{ secrets.RSA_KEY_B64 }}
        run: |
          echo "$AWS_ACCESS_KEY_ID:$AWS_SECRET_ACCESS_KEY" > ${HOME}/.passwd-s3fs
          chmod 600 ${HOME}/.passwd-s3fs

          mkdir -p /s3
          s3fs ${PACKAGE_BUCKET} /s3 \
              -o passwd_file=${HOME}/.passwd-s3fs \
              -o use_cache=/tmp \
              -o endpoint=us-east-2 \
              ;

          # Add the signing public key
          wget -q \
              https://nwlabs-381491855445-package-builder.s3.amazonaws.com/signing.key.pub \
              -O /etc/apk/keys/northwood-labs.pub

          echo -n "${RSA_KEY_B64}" | base64 --decode > signing.pem

          ALPINE=("3.17" "3.18" "3.19")
          ARCH=("x86_64" "aarch64", "all")

          for ALP in "${ALPINE[@]}"; do
            for CPU in "${ARCH[@]}"; do
              cd "/s3/apk/v${ALP}/main/${CPU}/" && \
                apk index --verbose --update-cache --output APKINDEX.tar.gz *.apk
              abuild-sign --private "${{ github.repository }}/signing.pem" "/s3/apk/v${ALP}/main/${CPU}/APKINDEX.tar.gz"
            done
          done
