---
# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.

name: "ðŸŽ¯ Step: Build and cache"
on:
  workflow_call:
    inputs:
      package-name:
        required: true
        type: string
      package-version:
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-build-and-cache
  cancel-in-progress: true

# Variables available to all jobs defined in this file
env:
  DOCKER_BUILDKIT: 1
  REGISTRY: ${{ vars.REGISTRY }}

# Declare default permissions as read only.
permissions: read-all

jobs:
  compile_ubuntu:
    runs-on: ubuntu-latest
    name: "ðŸ“¦ Ubuntu ${{ matrix.release.version }} (${{ matrix.arch }})"
    strategy:
      fail-fast: false
      matrix:
        release:
          - version: "20.04"
            name: focal
          - version: "22.04"
            name: jammy
        arch:
          - amd64
          - arm64

    steps:
      - name: Git clone
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          ref: ${{ github.base_ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: ${{ matrix.arch }}

      - name: Compile the software from source
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_KEY_B64: ${{ secrets.GPG_KEY_B64 }}
          NFPM_PASSPHRASE: "${{ secrets.GPG_PWD }}"
          PKG_VER: "${{ inputs.package-version }}"
        run: |
          docker run \
            --rm \
            --env GITHUB_TOKEN \
            --env PKG_VER \
            --volume "$PWD:/${{ github.workspace }}" \
            --workdir ${{ github.workspace }} \
            --platform linux/${{ matrix.arch }} \
            "ghcr.io/northwood-labs/package-builder/ubuntu-v${{ matrix.release.version }}:latest" \
            bash packages/${{ inputs.package-name }}/compile-ubuntu-${{ matrix.release.name }}.sh "${{ inputs.package-version }}" && \
            echo -n "${GPG_KEY_B64}" | base64 --decode > 3C7658F0.asc && \
            mkdir -p ./dist && nfpm package --config nfpm-${OS_DIST}-${OS_DIST_NAME}.yaml --packager deb --target ./dist

      - name: Cache the packages
        uses: actions/cache/save@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: cache-packages
        with:
          key: "${{ inputs.package-name }}-${{ inputs.package-version }}-ubuntu-${{ matrix.release.version }}-${{ matrix.arch }}"
          path: packages/${{ inputs.package-name }}/dist
